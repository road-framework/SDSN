orgMgt.removeProcessFromVSN("AsiaBus","AsiaBusP1");
orgMgt.removeVSN("AsiaBus");
oprMgt.removeRegulationUnitsFromProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingByMarkTow,
ruMarkTowAndMacRepair,ruActivateV1");
oprMgt.removeRegulationUnit("ruTowingByMarkTow");
oprMgt.removeRegulationUnit("ruMarkTowAndMacRepair");
orgMgt.removeRole("LF");
orgMgt.removeRole("TC3");
orgMgt.updateTask("SC","Analyze","remove","outputs","SC-TC3.orderTow.Req,SC-LF.inspectAccident.Req");
orgMgt.updateTask("GC1","OrderRepair","remove","inputs","SC-GC1.orderRepair.Req");
orgMgt.updateTask("GC1","OrderRepair","remove","outputs","GC1-TC3.sendGCLocation.Req");
orgMgt.updateTask("GC1","DoRepair","remove","inputs","GC1-TC3.sendGCLocation.Res");
orgMgt.removeContract("SC-LF");
orgMgt.removeContract("LF-TC3");
orgMgt.removeContract("GC1-TC3");
orgMgt.removeContract("SC-TC3");
orgMgt.removeTerm("SC-GC1","orderRepair");
orgMgt.removeBehaviorUnit("bTowingByMarkTow");
orgMgt.addBehaviorUnitToProcess("HappyTours","HappyToursP1","bTowingBySwiftTow");
orgMgt.removeBehaviorUnitFromProcess("HappyTours","HappyToursP1","bTowingByMarkTow");
oprMgt.removeSynchronizationRule("SC","payTC3");
oprMgt.removeSynchronizationRule("SC","payLF");
oprMgt.removeSynchronizationRule("GC1","orderRepairV2");
oprMgt.removeSynchronizationRule("GC1","doRepairV2");
oprMgt.removeRoutingRule("GC1","orderRepairResponseV2");
oprMgt.removeRoutingRule("SC","analyzeResponseV7");
oprMgt.removeRoutingRule("SC","analyzeResponseV8");
oprMgt.removeRoutingRule("SC","analyzeResponseV8");
oprMgt.removeRoutingRule("SC","payLFResponse");
oprMgt.removePassthroughRule("SC-GC1","orderRepair");
oprMgt.addRegulationUnitsToProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingBySwiftTow,
ruSwiftTowAndMacRepair,ruActivateV2");
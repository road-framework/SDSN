global au.edu.swin.ict.road.common.IOrganiserRole orgMgt;
global au.edu.swin.ict.road.common.IOperationalManagerRole oprMgt;
global au.edu.swin.ict.road.common.DisabledRuleSet disabledSet;
import au.edu.swin.ict.road.common.ManagementPolicyState;
import au.edu.swin.ict.road.common.Classifier;

rule "ChangesForC7firststep_per"
  when
    $mps : ManagementPolicyState(id =="firststep_per",state=="incipient")
  then
    $mps.setState("active");
    orgMgt.updateProcessOfVSN("HappyTours","HappyToursP1","state", "passive");
  // role-level changes
    // Role LF
    orgMgt.addRole("LF","AusLaw");
    orgMgt.setServiceBinding("LF", "http://localhost:8082/axis2/services/AusLawService");
    orgMgt.addTask("LF","InspectAccident","SC-LF.inspectAccident.Req","SC-LF.payLegalAid.Req,LF-TC3.authorizeTow.Req");
    orgMgt.setTaskQoS("LF","InspectAccident","Throughput:400/d,ResponseTime:30min");
    orgMgt.setTaskMessage("LF","InspectAccident","inspectAccident","String:info","String");
  // Role LF
    orgMgt.addRole("TC3","MarkTow");
    orgMgt.setServiceBinding("TC3", "http://localhost:8082/axis2/services/MarkTowService");
    orgMgt.addTask("TC3","Tow","SC-TC3.orderTow.Req, GC1-TC3.sendGCLocation.Req, LF-TC3.authorizeTow.Req","SC-TC3.payTow.Req, GC1-TC3.sendGCLocation.Res");
    orgMgt.setTaskQoS("TC3","Tow","Throughput:350/d,ResponseTime:2h");
    orgMgt.setTaskMessage("TC3","Tow","tow","String:pickupLocation,String:garageLocation","TowReturn");
    // Role SC
    orgMgt.addTask("SC","PayLF","LF.payLegalAid.Req","LF.payLegalAid.Res");
    orgMgt.setTaskMessage("SC","PayLF","payLF","String:content","String");
    orgMgt.updateTask("SC","Analyze","add","outputs","SC-TC3.orderTow.Req,SC-LF.inspectAccident.Req");
    //Role GC1
    orgMgt.updateTask("GC1","OrderRepair","add","inputs","SC-GC1.orderRepair.Req");
    orgMgt.updateTask("GC1","OrderRepair","add","outputs","GC1-TC3.sendGCLocation.Req");
    orgMgt.updateTask("GC1","DoRepair","add","inputs","GC1-TC3.sendGCLocation.Res");

    // contract-level changes
    //Contract SC-LF
    orgMgt.addContract("SC-LF","SC","LF");
    orgMgt.addTerm("SC-LF","inspectAccident","AtoB");
    orgMgt.setTermOperation("SC-LF","inspectAccident","inspectAccident","String:info","String");
    orgMgt.addTerm("SC-LF","payLegalAid","BtoA");
    orgMgt.setTermOperation("SC-LF","payLegalAid","payLegalAid","String:content","String");
    // contract LF-TC3
    orgMgt.addContract("LF-TC3","LF","TC3");
    orgMgt.addTerm("LF-TC3","authorizeTow","AtoB");
    orgMgt.setTermOperation("LF-TC3","authorizeTow","authorizeTow","String:content","String");
    // contract GC1-TC3
    orgMgt.addContract("GC1-TC3","GC1","TC3");
    orgMgt.addTerm("GC1-TC3","sendGCLocation","AtoB");
    orgMgt.setTermOperation("GC1-TC3","sendGCLocation","sendGCLocation","String:content","String");
    // contract SC-TC3
    orgMgt.addContract("SC-TC3","SC","TC3");
    orgMgt.addTerm("SC-TC3","orderTow","AtoB");
    orgMgt.setTermOperation("SC-TC3","orderTow","orderTow","String:content","String");
    orgMgt.addTerm("SC-TC3","payTow","BtoA");
    orgMgt.setTermOperation("SC-TC3","payTow","payTow","String:content","String");
    // contract SC-GC1
    orgMgt.addTerm("SC-GC1","orderRepair","AtoB");
    orgMgt.setTermOperation("SC-GC1","orderRepair","orderRepair","String:content","String");

    // behaviour unit changes
    orgMgt.addBehaviorUnit("bTowingByMarkTow");
    orgMgt.addTaskToBehaviorUnit("bTowingByMarkTow","LF.InspectAccident","eInspectAccidentReqd","ePayLegalAidReqd * eAuthorizedTow");
    orgMgt.addTaskToBehaviorUnit("bTowingByMarkTow","TC3.Tow","eTowReqdFromTC3 * eSentGC1LocToTC3 * eAuthorizeTow","ePayTowReqdByTC3 * eDeliveredVehicleToGC1ByTC3");
    orgMgt.addTaskToBehaviorUnit("bTowingByMarkTow","SC.PayLF","ePayLFReqd","eLFPaid");
    orgMgt.addTaskToBehaviorUnit("bTowingByMarkTow","SC.PayTC","ePayT3Reqd","eT3Reqd");

    orgMgt.removeBehaviorUnitFromProcess("HappyTours","HappyToursP1","bTowingBySwiftTow");
    orgMgt.addBehaviorUnitToProcess("HappyTours","HappyToursP1","bTowingByMarkTow");
    orgMgt.updateRole("LF","state","active");
    orgMgt.updateRole("TC3","state","active");
    orgMgt.updateContract("LF-TC3","state","active");
    orgMgt.updateContract("SC-LF","state","active");
    orgMgt.updateContract("SC-TC3","state","active");
    orgMgt.updateContract("TC3-GC1","state","active");
    orgMgt.updateProcessOfVSN("HappyTours","HappyToursP1","state", "active");

    oprMgt.updateRegulationUnitOfProcessRegulationPolicy("HappyTours","HappyToursP1","ruActivateV2","state","passive");
    oprMgt.updateRegulationUnitOfProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingBySwiftTow","state","passive");
    oprMgt.updateRegulationUnitOfProcessRegulationPolicy("HappyTours","HappyToursP1","ruSwiftTowAndMacRepair","state","passive");

    oprMgt.addSynchronizationRule("TC3","TC3_SYN.drl");
    oprMgt.addSynchronizationRule("LF","LF_SYN.drl");
    oprMgt.addSynchronizationRule("SC","SC_SYN_Diff_1.drl");
    oprMgt.addSynchronizationRule("GC1","GC1_SYN_Diff_1.drl");

    //routing rule changes
    oprMgt.addRoutingRule("TC3","TC3_Routing.drl");
    oprMgt.addRoutingRule("LF","LF_Routing.drl");
    oprMgt.addRoutingRule("GC1","GC1_Routing_Diff_1.drl");
    oprMgt.addRoutingRule("SC","SC_Routing_Diff_1.drl");

    //passthrough rule changes
    oprMgt.addPassthroughRule("SC-LF","SC-LF.drl");
    oprMgt.addPassthroughRule("LF-TC3","LF-TC3.drl");
    oprMgt.addPassthroughRule("SC-TC3","SC-TC3.drl");
    oprMgt.addPassthroughRule("GC1-TC3","GC1-TC3.drl");
    oprMgt.addPassthroughRule("SC-GC1","SC-GC1_Passthrough_Diff_1.drl");

    // regulation unit changes
    // TowingByMarkTow regulation unit
    oprMgt.addRegulationUnit("ruTowingByMarkTow");
    oprMgt.addSynchronizationRulesToRegulationUnit("ruTowingByMarkTow","payLF:SC, payTC3:SC, inspectAccident:LF");
    oprMgt.addRoutingRulesToRegulationUnit("ruTowingByMarkTow","analyzeResponseV7:SC, analyzeResponseV8:SC, analyzeResponseV9:SC, payLFResponse:SC, inspectAccidentResponse:LF,towResponse:TC3");
    oprMgt.addPassthroughRulesToRegulationUnit("ruTowingByMarkTow","inspectAccident:SC-LF, payLegalAid:SC-LF, payLegalAidResponse:SC-LF,orderTow:SC-TC3, payTow:SC-TC3, payTowResponse:SC-TC3, authorizeTow:LF-TC3");

   // MarkTowAndMacRepair regulation unit
    oprMgt.addRegulationUnit("ruMarkTowAndMacRepair");
    oprMgt.addSynchronizationRulesToRegulationUnit("ruMarkTowAndMacRepair","deliverGC1:TC1, doRepairV2:GC1, orderRepairV2:GC1, tow:TC3");
    oprMgt.addRoutingRulesToRegulationUnit("ruMarkTowAndMacRepair","towResponseV2:TC3, orderRepairResponseV2:GC1");
    oprMgt.addPassthroughRulesToRegulationUnit("ruMarkTowAndMacRepair","sendGCLocation:GC1-TC3,sendGCLocationResponse:GC1-TC3");

    oprMgt.addRegulationUnitsToProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingByMarkTow,ruMarkTowAndMacRepair,ruActivateV1");
    // State Changes
    oprMgt.updateRegulationUnit("ruMarkTowAndMacRepair","state","active");
    oprMgt.updateRegulationUnit("ruTowingByMarkTow","state","active");
    oprMgt.updateRegulationUnitOfProcessRegulationPolicy("HappyTours","HappyToursP1","ruMarkTowAndMacRepair","state","active");
    oprMgt.updateRegulationUnitOfProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingByMarkTow","state","active");
    oprMgt.updateRegulationUnitOfProcessRegulationPolicy("HappyTours","HappyToursP1","ruActivateV1","state","active");
    oprMgt.removeRegulationUnitsFromProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingBySwiftTow");
    oprMgt.removeRegulationUnitsFromProcessRegulationPolicy("HappyTours","HappyToursP1","ruSwiftTowAndMacRepair");
    oprMgt.removeRegulationUnitsFromProcessRegulationPolicy("HappyTours","HappyToursP1","ruActivateV2");
end
import au.edu.swin.ict.road.composite.rules.events.contract.MessageReceivedEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.ObligationComplianceEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.TermExecutedEvent;
import au.edu.swin.ict.road.composite.contract.Contract;
import au.edu.swin.ict.road.regulator.FactTupleSpace;

/** Global Variables **/
global Contract contract;
global FactTupleSpace fts;

/** Events **/
declare MessageReceivedEvent
    @role(event)
end

declare TermExecutedEvent
    @role(event)
    @expires(24h)
end

declare ObligationComplianceEvent
    @role(event)
    @expires(24h)
end

/** Permission Rules **/
rule "rentRoom"
    when
		$event : MessageReceivedEvent(operationName == "rentRoom",  response ==false)
    then
    	System.out.println("RentRoom from CO to HC :RentRoomReqd");
		$event.setBlocked(false);
		//Logic to inspect the message

		$event.triggerEvent("RentRoomReqd");

end
rule "rentRoomResponse"
    when
		$event : MessageReceivedEvent(operationName == "rentRoom",  response ==true)
    then
    	System.out.println("RentRoom response from CO to HC :RentedRoom");
		$event.setBlocked(false);
		//Logic to inspect the message

		$event.triggerEvent("RentedRoom");
end

rule "endRoomRent"
    when
		$event : MessageReceivedEvent(operationName == "endRoomRent",  response ==false)
    then
    	System.out.println("EndRoomRent from CO to HC :EndRoomRentReqd");
		$event.setBlocked(false);
		//Logic to inspect the message

		$event.triggerEvent("EndRoomRentReqd");

end

rule "endRoomRentResponse"
    when
		$event : MessageReceivedEvent(operationName == "endRoomRent",  response ==true)
    then
    	System.out.println("EndRoomRent response from CO to HC :EndedRoomRent");
		$event.setBlocked(false);
		//Logic to inspect the message

		$event.triggerEvent("EndedRoomRent");
end

rule "payRoomRent"
    when
		$event : MessageReceivedEvent(operationName == "payRoomRent",  response ==false)
    then
    	System.out.println("PayRoomRent from CO to HC :PayRoomRentReqd");
		$event.setBlocked(false);
		//Logic to inspect the message

		$event.triggerEvent("PayRoomRentReqd");

end

rule "payRoomRentResponse"
    when
		$event : MessageReceivedEvent(operationName == "payRoomRent",  response ==true)
    then
    	System.out.println("PayRoomRent response from CO to HC :HCPaid");
		$event.setBlocked(false);
		//Logic to inspect the message

		$event.triggerEvent("HCPaid");

end
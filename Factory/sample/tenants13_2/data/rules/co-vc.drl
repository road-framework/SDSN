import au.edu.swin.ict.road.composite.rules.events.contract.MessageReceivedEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.ObligationComplianceEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.TermExecutedEvent;
import au.edu.swin.ict.road.composite.contract.Contract;
import au.edu.swin.ict.road.regulator.FactTupleSpace;

/** Global Variables **/
global Contract contract;
global FactTupleSpace fts;

/** Events **/
declare MessageReceivedEvent
    @role(event)
end

declare TermExecutedEvent
    @role(event)
    @expires(24h)
end

declare ObligationComplianceEvent
    @role(event)
    @expires(24h)
end

/** Permission Rules **/
rule "rentVehicle"
    when
		$event : MessageReceivedEvent(operationName == "rentVehicle",  response ==false)
    then
    	System.out.println("RentVehicle from CO to VC :RentVehicleReqd");
		$event.setBlocked(false);	
		//Logic to inspect the message
	
		$event.triggerEvent("RentVehicleReqd");
		
end
rule "rentVehicleResponse"
    when
		$event : MessageReceivedEvent(operationName == "rentVehicle",  response ==true)
    then
    	System.out.println("RentVehicle response from CO to VC :RentedVehicle");
		$event.setBlocked(false);	
		//Logic to inspect the message
	
		$event.triggerEvent("RentedVehicle");   		
end

rule "endVehicleRent"
    when
		$event : MessageReceivedEvent(operationName == "endVehicleRent",  response ==false)
    then
    	System.out.println("EndVehicleRent from CO to VC :EndVehicleRentReqd");
		$event.setBlocked(false);	
		//Logic to inspect the message
	
		$event.triggerEvent("EndVehicleRentReqd");
		
end

rule "endVehicleRentResponse"
    when
		$event : MessageReceivedEvent(operationName == "endVehicleRent",  response ==true)
    then
    	System.out.println("EndVehicleRent response from CO to VC :EndedVehicleRent");
		$event.setBlocked(false);	
		//Logic to inspect the message
	
		$event.triggerEvent("EndedVehicleRent");             		
end

rule "payVehicleRent"
    when
		$event : MessageReceivedEvent(operationName == "payVehicleRent",  response ==false)
    then
    	System.out.println("PayVehicleRent from CO to VC :PayVehicleRentReqd");
		$event.setBlocked(false);	
		//Logic to inspect the message
	
		$event.triggerEvent("PayVehicleRentReqd");
		
end

rule "payVehicleRentResponse"
    when
		$event : MessageReceivedEvent(operationName == "payVehicleRent",  response ==true)
    then
    	System.out.println("PayVehicleRent response from CO to VC :VCPaid");
		$event.setBlocked(false);	
		//Logic to inspect the message
	
		$event.triggerEvent("VCPaid");
		
end
<!-- RoadsideP3 BPEL Process [Generated by the Eclipse BPEL Designer] -->
<!-- Date: Sun Nov 16 16:23:39 EST 2014 -->
<bpel:process name="RoadsideP3"
              targetNamespace="http://roadside-ode-paper3/noal"
              suppressJoinFailure="yes"
              expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0"
              xmlns:tns="http://roadside-ode-paper3/noal"
              xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
              xmlns:ns1="http://www.w3.org/2001/XMLSchema"
              xmlns:ns9="http://ws.apache.org/axis2/co" xmlns:nsgrex="http://ws.apache.org/axis2/grex"
              xmlns:grinNs="http://ws.apache.org/axis2/grin" xmlns:ttsNs="http://ws.apache.org/axis2/tts"
              xmlns:hsNs="http://ws.apache.org/axis2/hc" xmlns:psNs="http://ws.apache.org/axis2/ps"
              xmlns:ttpNs="http://ws.apache.org/axis2/ttp" xmlns:vsNs="http://ws.apache.org/axis2/vc">

    <!-- Import the client WSDL -->
    <bpel:import namespace="http://ws.apache.org/axis2/ps" location="PartSupplierService.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://ws.apache.org/axis2/vc" location="VehicleRentalService.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://ws.apache.org/axis2/hc" location="HotelService.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://ws.apache.org/axis2/ttp" location="TowServicePar.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://ws.apache.org/axis2/tts" location="TowServiceSeq.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://ws.apache.org/axis2/grex" location="ExGarageService.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://ws.apache.org/axis2/grin" location="InGarageService.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import namespace="http://ws.apache.org/axis2/co" location="CaseOfficerService.wsdl"
                 importType="http://schemas.xmlsoap.org/wsdl/"></bpel:import>
    <bpel:import location="RoadsideP3Artifacts.wsdl" namespace="http://roadside-ode-paper3/noal"
                 importType="http://schemas.xmlsoap.org/wsdl/"/>

    <!-- ================================================================= -->
    <!-- PARTNERLINKS                                                      -->
    <!-- List of services participating in this BPEL process               -->
    <!-- ================================================================= -->
    <bpel:partnerLinks>
        <!-- The 'client' role represents the requester of this service. -->
        <bpel:partnerLink name="client"
                          partnerLinkType="tns:RoadsideP3"
                          myRole="RoadsideP3Provider"
        />
        <bpel:partnerLink name="scPlayer" partnerLinkType="tns:scPLType" partnerRole="scRole"></bpel:partnerLink>
        <bpel:partnerLink name="grinPlayer" partnerLinkType="tns:grinPLType" partnerRole="grinRole"></bpel:partnerLink>
        <bpel:partnerLink name="grexPlayer" partnerLinkType="tns:grexPLType" partnerRole="grexRole"></bpel:partnerLink>
        <bpel:partnerLink name="tcseqPlayer" partnerLinkType="tns:tcSeqPLType"
                          partnerRole="tcSeqRole"></bpel:partnerLink>
        <bpel:partnerLink name="tcparPlayer" partnerLinkType="tns:tcParPLType"
                          partnerRole="tcParRole"></bpel:partnerLink>
        <bpel:partnerLink name="hcPlayer" partnerLinkType="tns:hcPLType" partnerRole="hcPLRole"></bpel:partnerLink>
        <bpel:partnerLink name="vcPlayer" partnerLinkType="tns:vcPlayerPLType" partnerRole="vcRole"></bpel:partnerLink>
        <bpel:partnerLink name="psPlayer" partnerLinkType="tns:psPLType" partnerRole="psRole"></bpel:partnerLink>
    </bpel:partnerLinks>

    <!-- ================================================================= -->
    <!-- VARIABLES                                                         -->
    <!-- List of messages and XML documents used within this BPEL process  -->
    <!-- ================================================================= -->
    <bpel:variables>
        <!-- Reference to the message passed as input during initiation -->
        <bpel:variable name="input"
                       messageType="tns:RoadsideP3RequestMessage"/>

        <!-- 
          Reference to the message that will be returned to the requester
          -->
        <bpel:variable name="output"
                       messageType="tns:RoadsideP3ResponseMessage"/>
        <bpel:variable name="tenantId" type="ns1:string"/>
        <bpel:variable name="anlyzeReq" messageType="ns9:analyzeRequest"></bpel:variable>
        <bpel:variable name="anlyzeRes" messageType="ns9:analyzeResponse"></bpel:variable>

        <bpel:variable name="grInLocReq" messageType="grinNs:getGarageLocationRequest"></bpel:variable>
        <bpel:variable name="grExLocReq" messageType="nsgrex:getGarageLocationRequest"></bpel:variable>
        <bpel:variable name="grExLocRes" messageType="nsgrex:getGarageLocationResponse"></bpel:variable>
        <bpel:variable name="grInLocRes" messageType="grinNs:getGarageLocationResponse"></bpel:variable>
        <bpel:variable name="pickupReq" messageType="ttpNs:pickUpRequest"></bpel:variable>
        <bpel:variable name="pickupRes" messageType="ttpNs:pickUpResponse"></bpel:variable>
        <bpel:variable name="orderTowSeq" messageType="ttsNs:towRequest"></bpel:variable>
        <bpel:variable name="rentRoomReq" messageType="hsNs:rentRoomRequest"></bpel:variable>
        <bpel:variable name="rentRoomRes" messageType="hsNs:rentRoomResponse"></bpel:variable>

        <bpel:variable name="orderTowSeqRes" messageType="ttsNs:towResponse"></bpel:variable>
        <bpel:variable name="rentVehicleSeqReq" messageType="vsNs:rentVehicleRequest"></bpel:variable>
        <bpel:variable name="rentVehicleSeqRes" messageType="vsNs:rentVehicleResponse"></bpel:variable>
        <bpel:variable name="payTowreq" messageType="ns9:payTTRequest"></bpel:variable>
        <bpel:variable name="payTowResd" messageType="ns9:payTTResponse"></bpel:variable>
        <bpel:variable name="payRepairReq" messageType="ns9:payGRRequest"></bpel:variable>
        <bpel:variable name="payRepairRes" messageType="ns9:payGRResponse"></bpel:variable>
        <bpel:variable name="payVehicleReq" messageType="ns9:payVCRequest"></bpel:variable>
        <bpel:variable name="payVehicleRes" messageType="ns9:payVCResponse"></bpel:variable>
        <bpel:variable name="payRoomReq" messageType="ns9:payHCRequest"></bpel:variable>
        <bpel:variable name="payRoomRes" messageType="ns9:payHCResponse"></bpel:variable>
        <bpel:variable name="endRoomRentReq" messageType="hsNs:endRoomRentRequest"></bpel:variable>
        <bpel:variable name="endRoomRentRes" messageType="hsNs:endRoomRentResponse"></bpel:variable>
        <bpel:variable name="endVehicleRentReq" messageType="vsNs:endVehicleRentRequest"></bpel:variable>
        <bpel:variable name="endVehicleRentRes" messageType="vsNs:endVehicleRentResponse"></bpel:variable>
        <bpel:variable name="grinDoRepairReq" messageType="grinNs:doRepairRequest"></bpel:variable>
        <bpel:variable name="grinDoRepairRes" messageType="grinNs:doRepairResponse"></bpel:variable>
        <bpel:variable name="grexDoRepairReq" messageType="nsgrex:doRepairRequest"></bpel:variable>
        <bpel:variable name="grexDoRepairRes" messageType="nsgrex:doRepairResponse"></bpel:variable>
        <bpel:variable name="orderPartsReq" messageType="psNs:orderPartsRequest"></bpel:variable>
        <bpel:variable name="orderPartsRes" messageType="psNs:orderPartsResponse"></bpel:variable>
        <bpel:variable name="payPartsReq" messageType="ns9:payPSRequest"></bpel:variable>
        <bpel:variable name="payPartsRes" messageType="ns9:payPSResponse"></bpel:variable>
        <bpel:variable name="deliverReq" messageType="ttpNs:deliverRequest"></bpel:variable>
        <bpel:variable name="deliverRes" messageType="ttpNs:deliverResponse"></bpel:variable>
        <bpel:variable name="assessRepairReq" messageType="nsgrex:assessRepairRequest"></bpel:variable>
        <bpel:variable name="assessRepairRes" messageType="nsgrex:assessRepairResponse"></bpel:variable>
    </bpel:variables>

    <!-- ================================================================= -->
    <!-- ORCHESTRATION LOGIC                                               -->
    <!-- Set of activities coordinating the flow of messages across the    -->
    <!-- services integrated within this business process                  -->
    <!-- ================================================================= -->
    <bpel:sequence name="main">

        <!-- Receive input from requester. 
             Note: This maps to operation defined in RoadsideP3.wsdl 
             -->
        <bpel:receive name="receiveInput" partnerLink="client"
                      portType="tns:RoadsideP3"
                      operation="process" variable="input"
                      createInstance="yes"/>

        <!-- Generate reply to synchronous request -->
        <bpel:assign validate="no" name="TenantIdCopy">
            <bpel:copy>
                <bpel:to variable="tenantId"></bpel:to>
                <bpel:from part="payload" variable="input">
                    <bpel:query queryLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath1.0">
                        <![CDATA[tns:tenantId]]></bpel:query>
                </bpel:from>
            </bpel:copy>
        </bpel:assign>
        <bpel:flow name="FirstMainFlow">
            <bpel:sequence name="AnalyzeSeqTowRentRoomVehicle">
                <bpel:sequence name="AnalyzeSeq">
                    <bpel:assign validate="no" name="AnalyzeReq">
                        <bpel:copy>
                            <bpel:from>
                                <![CDATA[bpel:doXslTransform("Analyze.xsl", $input.payload)]]>
                            </bpel:from>
                            <bpel:to part="parameters" variable="anlyzeReq"></bpel:to>
                        </bpel:copy>
                    </bpel:assign>
                    <bpel:invoke name="InvokeAnalyze" partnerLink="scPlayer" operation="analyze"
                                 portType="ns9:CaseOfficerServicePortType" inputVariable="anlyzeReq"
                                 outputVariable="anlyzeRes"></bpel:invoke>
                </bpel:sequence>
                <bpel:flow name="AfterAnalyze">
                    <bpel:sequence name="TowSeq">
                        <bpel:if name="If">
                            <bpel:condition><![CDATA[$tenantId="EuroCars"]]></bpel:condition>
                            <bpel:sequence name="IfSeq">
                                <bpel:assign validate="no" name="GetLocationEx">
                                    <bpel:copy>
                                        <bpel:from>
                                            <![CDATA[bpel:doXslTransform("GetGREXLocation.xsl", $anlyzeRes.parameters)]]>
                                        </bpel:from>
                                        <bpel:to part="parameters" variable="grExLocReq"/>
                                    </bpel:copy>
                                </bpel:assign>
                                <bpel:invoke name="GREX.getLoc" partnerLink="grexPlayer"
                                             operation="getGarageLocation"
                                             portType="nsgrex:ExGarageServicePortType"
                                             inputVariable="grExLocReq"
                                             outputVariable="grExLocRes"></bpel:invoke>
                                <bpel:assign validate="no" name="TowRequest">
                                    <bpel:copy>
                                        <bpel:from>
                                            <![CDATA[bpel:doXslTransform("TowSeq.xsl", $grExLocRes.parameters)]]>
                                        </bpel:from>
                                        <bpel:to part="parameters" variable="orderTowSeq"/>
                                    </bpel:copy>
                                </bpel:assign>
                                <bpel:invoke name="TTS.Tow" partnerLink="tcseqPlayer" operation="tow"
                                             portType="ttsNs:TowServiceSeqPortType" inputVariable="orderTowSeq"
                                             outputVariable="orderTowSeqRes"/>
                                <bpel:assign validate="no" name="assessRepairReq">
                                    <bpel:copy>
                                        <bpel:from>
                                            <![CDATA[bpel:doXslTransform("AssessRepair.xsl", $orderTowSeqRes.parameters)]]>
                                        </bpel:from>
                                        <bpel:to part="parameters" variable="assessRepairReq"/>
                                    </bpel:copy>
                                </bpel:assign>
                            </bpel:sequence>
                        </bpel:if>
                    </bpel:sequence>
                    <bpel:sequence name="HotelOrVehicle">
                        <bpel:if name="If">
                            <bpel:condition><![CDATA[$tenantId="EuroCars" or $tenantId="HappyTours"]]></bpel:condition>
                            <bpel:sequence name="RentVehicle">
                                <bpel:assign validate="no" name="RentVehicleReq">
                                    <bpel:copy>
                                        <bpel:from>
                                            <![CDATA[bpel:doXslTransform("RentVehicle.xsl", $anlyzeRes.parameters)]]>
                                        </bpel:from>
                                        <bpel:to part="parameters" variable="rentVehicleSeqReq"/>
                                    </bpel:copy>
                                </bpel:assign>
                                <bpel:invoke name="VC.RentVehicle" partnerLink="vcPlayer" operation="rentVehicle"
                                             portType="vsNs:VehicleRentalServicePortType"
                                             inputVariable="rentVehicleSeqReq"
                                             outputVariable="rentVehicleSeqRes"/>
                            </bpel:sequence>
                            <bpel:elseif>
                                <bpel:condition><![CDATA[$tenantId="AnyTrucks"]]></bpel:condition>
                                <bpel:sequence name="RentRoom">
                                    <bpel:assign validate="no" name="RentRoomReq">
                                        <bpel:copy>
                                            <bpel:from>
                                                <![CDATA[bpel:doXslTransform("RentRoom.xsl", $anlyzeRes.parameters)]]>
                                            </bpel:from>
                                            <bpel:to part="parameters" variable="rentRoomReq"/>
                                        </bpel:copy>
                                    </bpel:assign>
                                    <bpel:invoke name="HC.RentRoom" partnerLink="hcPlayer" operation="rentRoom"
                                                 portType="hsNs:HotelServicePortType" inputVariable="rentRoomReq"
                                                 outputVariable="rentRoomRes"/>
                                </bpel:sequence>
                            </bpel:elseif>
                        </bpel:if>
                    </bpel:sequence>
                </bpel:flow>
            </bpel:sequence>
            <bpel:sequence name="TowParInEx">
                <bpel:if name="If">
                    <bpel:condition><![CDATA[$tenantId="HappyTours" or $tenantId="AnyTrucks"]]></bpel:condition>
                    <bpel:sequence name="InEXParTow">
                        <bpel:flow name="InExPickupFlow">
                            <bpel:sequence name="PickUpSequence">
                                <bpel:assign validate="no" name="PickUpReq">
                                    <bpel:copy>
                                        <bpel:from>
                                            <![CDATA[bpel:doXslTransform("PickUp.xsl", $input.payload)]]>
                                        </bpel:from>
                                        <bpel:to part="parameters" variable="pickupReq"></bpel:to>
                                    </bpel:copy>
                                </bpel:assign>
                                <bpel:invoke name="TTP.PickUp" partnerLink="tcparPlayer" operation="pickUp"
                                             portType="ttpNs:TowServiceParPortType" inputVariable="pickupReq"
                                             outputVariable="pickupRes"></bpel:invoke>
                            </bpel:sequence>
                            <bpel:sequence name="GetLocInEx">
                                <bpel:if name="If">
                                    <bpel:condition><![CDATA[$tenantId="HappyTours"]]></bpel:condition>
                                    <bpel:sequence name="GerGRINLocSeq">
                                        <bpel:assign validate="no" name="gerLocReq">
                                            <bpel:copy>
                                                <bpel:from>
                                                    <![CDATA[bpel:doXslTransform("GetGRINLocation.xsl", $input.payload)]]>
                                                </bpel:from>
                                                <bpel:to part="parameters" variable="grInLocReq"></bpel:to>
                                            </bpel:copy>
                                        </bpel:assign>
                                        <bpel:invoke name="GRIN.GetLoc" partnerLink="grinPlayer"
                                                     operation="getGarageLocation"
                                                     portType="grinNs:InGarageServicePortType"
                                                     inputVariable="grInLocReq"
                                                     outputVariable="grInLocRes"></bpel:invoke>
                                        <bpel:assign validate="no" name="deliverReq">
                                            <bpel:copy>
                                                <bpel:from>
                                                    <![CDATA[bpel:doXslTransform("Deliver.xsl", $grInLocRes.parameters)]]>
                                                </bpel:from>
                                                <bpel:to part="parameters" variable="deliverReq"/>
                                            </bpel:copy>
                                        </bpel:assign>
                                    </bpel:sequence>
                                    <bpel:elseif>
                                        <bpel:condition><![CDATA[$tenantId="AnyTrucks"]]></bpel:condition>
                                        <bpel:sequence name="GREX.GetLoc">
                                            <bpel:assign validate="no" name="getLocReq">
                                                <bpel:copy>
                                                    <bpel:from>
                                                        <![CDATA[bpel:doXslTransform("GetGREXLocation.xsl", $input.payload)]]>
                                                    </bpel:from>
                                                    <bpel:to part="parameters" variable="grExLocReq"></bpel:to>
                                                </bpel:copy>
                                            </bpel:assign>
                                            <bpel:invoke name="GREX.getLoc" partnerLink="grexPlayer"
                                                         operation="getGarageLocation"
                                                         portType="nsgrex:ExGarageServicePortType"
                                                         inputVariable="grExLocReq"
                                                         outputVariable="grExLocRes"></bpel:invoke>
                                            <bpel:assign validate="no" name="deliverReq">
                                                <bpel:copy>
                                                    <bpel:from>
                                                        <![CDATA[bpel:doXslTransform("Deliver.xsl", $grExLocRes.parameters)]]>
                                                    </bpel:from>
                                                    <bpel:to part="parameters" variable="deliverReq"/>
                                                </bpel:copy>
                                            </bpel:assign>
                                        </bpel:sequence>
                                    </bpel:elseif>
                                </bpel:if>
                            </bpel:sequence>
                        </bpel:flow>
                        <bpel:sequence name="DeliverVehicleInEx">
                            <bpel:invoke name="TTP.Deliver" partnerLink="tcparPlayer" operation="deliver"
                                         portType="ttpNs:TowServiceParPortType" inputVariable="deliverReq"
                                         outputVariable="deliverRes"/>
                            <bpel:assign validate="no" name="assessRepairReq">
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[bpel:doXslTransform("AssessRepair.xsl", $deliverRes.parameters)]]>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="assessRepairReq"/>
                                </bpel:copy>
                            </bpel:assign>
                            <bpel:assign validate="no" name="repairGrinReq">
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[bpel:doXslTransform("DoRepair.xsl", $deliverRes.parameters)]]>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="grinDoRepairReq"/>
                                </bpel:copy>
                            </bpel:assign>
                        </bpel:sequence>
                    </bpel:sequence>
                </bpel:if>
            </bpel:sequence>
        </bpel:flow>
        <bpel:flow name="SecondMainFlow">
            <bpel:sequence name="PayTowSeqPar">
                <bpel:if name="If">
                    <bpel:condition><![CDATA[$tenantId="EuroCars"]]></bpel:condition>
                    <bpel:sequence name="PreparePaymentToTTS">
                        <bpel:assign validate="no" name="payTCReq">
                            <bpel:copy>
                                <bpel:from>
                                    <![CDATA[bpel:doXslTransform("PayTT.xsl", $orderTowSeqRes.parameters)]]>
                                </bpel:from>
                                <bpel:to part="parameters" variable="payTowreq"/>
                            </bpel:copy>
                        </bpel:assign>
                    </bpel:sequence>
                    <bpel:elseif>
                        <bpel:condition><![CDATA[$tenantId="AnyTrucks" or $tenantId="HappyTours"]]></bpel:condition>
                        <bpel:sequence name="PreparePaymentToTTP">
                            <bpel:assign validate="no" name="payTCReq">
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[bpel:doXslTransform("PayTT.xsl", $deliverRes.parameters)]]>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="payTowreq"/>
                                </bpel:copy>
                            </bpel:assign>
                        </bpel:sequence>
                    </bpel:elseif>
                </bpel:if>
                <bpel:sequence name="PayTC">
                    <bpel:invoke name="SC.PayTC" partnerLink="scPlayer" operation="payTT"
                                 portType="ns9:CaseOfficerServicePortType" inputVariable="payTowreq"
                                 outputVariable="payTowResd"/>
                </bpel:sequence>
            </bpel:sequence>
            <bpel:sequence name="RepairInEx">
                <bpel:if name="If">
                    <bpel:condition><![CDATA[$tenantId="HappyTours"]]></bpel:condition>
                    <bpel:sequence name="RepairIn">
                        <bpel:invoke name="GRIN.DoRepair" partnerLink="grinPlayer" operation="doRepair"
                                     portType="grinNs:InGarageServicePortType" inputVariable="grinDoRepairReq"
                                     outputVariable="grinDoRepairRes"/>
                        <bpel:assign validate="no" name="payRepairReq">
                            <bpel:copy>
                                <bpel:from>
                                    <![CDATA[bpel:doXslTransform("PayGR.xsl", $grinDoRepairRes.parameters)]]>
                                </bpel:from>
                                <bpel:to part="parameters" variable="payRepairReq"/>
                            </bpel:copy>
                        </bpel:assign>
                    </bpel:sequence>
                    <bpel:elseif>
                        <bpel:condition><![CDATA[$tenantId="EuroCars" or $tenantId="AnyTrucks"]]></bpel:condition>
                        <bpel:sequence name="RepairEx">
                            <bpel:invoke name="GREX.AssessRepair" partnerLink="grexPlayer" operation="assessRepair"
                                         portType="nsgrex:ExGarageServicePortType" inputVariable="assessRepairReq"
                                         outputVariable="assessRepairRes"/>
                            <bpel:assign validate="no" name="orderPartsReq">
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[bpel:doXslTransform("OrderParts.xsl", $assessRepairRes.parameters)]]>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="orderPartsReq"/>
                                </bpel:copy>
                            </bpel:assign>
                            <bpel:invoke name="PS.OrderParts" partnerLink="psPlayer" operation="orderParts"
                                         portType="psNs:PartSupplierServicePortType" inputVariable="orderPartsReq"
                                         outputVariable="orderPartsRes"/>
                            <bpel:assign validate="no" name="doExRepairReq">
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[bpel:doXslTransform("DoRepairEx.xsl", $orderPartsRes.parameters)]]>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="grexDoRepairReq"/>
                                </bpel:copy>
                            </bpel:assign>
                            <bpel:flow name="RepairPartsPay">
                                <bpel:sequence name="DoRepairEx">
                                    <bpel:invoke name="GREX.DoRepair" partnerLink="grexPlayer" operation="doRepair"
                                                 portType="nsgrex:ExGarageServicePortType"
                                                 inputVariable="grexDoRepairReq"
                                                 outputVariable="grexDoRepairRes"/>
                                    <bpel:assign validate="no" name="payRepairReq">
                                        <bpel:copy>
                                            <bpel:from>
                                                <![CDATA[bpel:doXslTransform("PayGR.xsl", $grexDoRepairRes.parameters)]]>
                                            </bpel:from>
                                            <bpel:to part="parameters" variable="payRepairReq"/>
                                        </bpel:copy>
                                    </bpel:assign>
                                </bpel:sequence>
                                <bpel:sequence name="PayParts">
                                    <bpel:assign validate="no" name="payPartsReq">
                                        <bpel:copy>
                                            <bpel:from>
                                                <![CDATA[bpel:doXslTransform("PayPS.xsl", $orderPartsRes.parameters)]]>
                                            </bpel:from>
                                            <bpel:to part="parameters" variable="payPartsReq"/>
                                        </bpel:copy>
                                    </bpel:assign>
                                    <bpel:invoke name="SC.PayPS" partnerLink="scPlayer" operation="payPS"
                                                 portType="ns9:CaseOfficerServicePortType" inputVariable="payPartsReq"
                                                 outputVariable="payPartsRes"/>
                                </bpel:sequence>
                            </bpel:flow>
                        </bpel:sequence>
                    </bpel:elseif>
                </bpel:if>
            </bpel:sequence>
        </bpel:flow>
        <bpel:sequence name="PayRepairInEx">
            <bpel:invoke name="SC.PayGR" partnerLink="scPlayer" operation="payGR"
                         portType="ns9:CaseOfficerServicePortType" inputVariable="payRepairReq"
                         outputVariable="payRepairRes"/>
        </bpel:sequence>
        <bpel:flow name="ThirdMainFlow">
            <bpel:sequence name="EndRentsSeq">
                <bpel:if name="If">
                    <bpel:condition><![CDATA[$tenantId="AnyTrucks"]]></bpel:condition>
                    <bpel:sequence name="EndRoomRentAndPay">
                        <bpel:assign validate="no" name="endRoomRentReq">
                            <bpel:copy>
                                <bpel:from>
                                    <![CDATA[bpel:doXslTransform("EndRoomRent.xsl", $payRepairRes.parameters)]]>
                                </bpel:from>
                                <bpel:to part="parameters" variable="endRoomRentReq"/>
                            </bpel:copy>
                        </bpel:assign>
                        <bpel:invoke name="HC.EndRent" partnerLink="hcPlayer" operation="endRoomRent"
                                     portType="hsNs:HotelServicePortType" inputVariable="endRoomRentReq"
                                     outputVariable="endRoomRentRes"/>
                        <bpel:assign validate="no" name="payRoomReq">
                            <bpel:copy>
                                <bpel:from>
                                    <![CDATA[bpel:doXslTransform("PayHC.xsl", $endRoomRentRes.parameters)]]>
                                </bpel:from>
                                <bpel:to part="parameters" variable="payRoomReq"/>
                            </bpel:copy>
                        </bpel:assign>
                        <bpel:invoke name="SC.PayHC" partnerLink="scPlayer" operation="payHC"
                                     portType="ns9:CaseOfficerServicePortType" inputVariable="payRoomReq"
                                     outputVariable="payRoomRes"/>
                    </bpel:sequence>
                    <bpel:elseif>
                        <bpel:condition><![CDATA[$tenantId="HappyTours" or $tenantId="EuroCars"]]></bpel:condition>
                        <bpel:sequence name="EndVehicleRentAndPay">
                            <bpel:assign validate="no" name="endVehicleRentReq">
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[bpel:doXslTransform("EndVehicleRent.xsl", $payRepairRes.parameters)]]>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="endVehicleRentReq"/>
                                </bpel:copy>
                            </bpel:assign>
                            <bpel:invoke name="VC.EndRent" partnerLink="vcPlayer" operation="endVehicleRent"
                                         portType="vsNs:VehicleRentalServicePortType" inputVariable="endVehicleRentReq"
                                         outputVariable="endVehicleRentRes"/>
                            <bpel:assign validate="no" name="payVehicleReq">
                                <bpel:copy>
                                    <bpel:from>
                                        <![CDATA[bpel:doXslTransform("PayVC.xsl", $endVehicleRentRes.parameters)]]>
                                    </bpel:from>
                                    <bpel:to part="parameters" variable="payVehicleReq"/>
                                </bpel:copy>
                            </bpel:assign>
                            <bpel:invoke name="SC.PayHC" partnerLink="scPlayer" operation="payVC"
                                         portType="ns9:CaseOfficerServicePortType" inputVariable="payVehicleReq"
                                         outputVariable="payVehicleRes"/>
                        </bpel:sequence>
                    </bpel:elseif>
                </bpel:if>
            </bpel:sequence>
        </bpel:flow>
        <bpel:assign validate="no" name="ClientResponse">
            <bpel:copy>
                <bpel:from>
                    <![CDATA[bpel:doXslTransform("Notify.xsl", $payRepairRes.parameters)]]>
                </bpel:from>
                <bpel:to part="payload" variable="output"></bpel:to>
            </bpel:copy>
        </bpel:assign>

        <bpel:reply name="replyOutput"
                    partnerLink="client"
                    portType="tns:RoadsideP3"
                    operation="process"
                    variable="output"
        />
    </bpel:sequence>
</bpel:process>
global au.edu.swin.ict.road.common.IOrganiserRole orgMgt;
global au.edu.swin.ict.road.common.IOperationalManagerRole oprMgt;
global au.edu.swin.ict.road.common.DisabledRuleSet disabledSet;
import au.edu.swin.ict.road.common.ManagementPolicyState;
import au.edu.swin.ict.road.common.Classifier;

rule "ChangesForC4-per-add"
  when
    $mps : ManagementPolicyState(id =="add", state=="incipient")
  then
    $mps.setState("active");
    long start1 = System.nanoTime();
    oprMgt.removeRegulationUnitsFromProcessRegulationPolicy("HappyTours","HappyToursP1","ruRepairPerLevelChange_2d3d4d");
    oprMgt.removeRegulationUnitsFromProcessRegulationPolicy("EuroCars","EuroCarsP1","ruRepairPerLevelChange_3d4d");

    oprMgt.removeSynchronizationRule("GC1","doRepairChangePerfLevel_2d3d4d");
    oprMgt.removeSynchronizationRule("GC1","doRepairChangePerfLevel_3d4d");
    oprMgt.removeSynchronizationRule("GC1","doRepairChangePerfLevel_2d4d");

    oprMgt.removeRegulationUnit("ruRepairPerLevelChange_2d3d4d");
    oprMgt.removeRegulationUnit("ruRepairPerLevelChange_3d4d");
    oprMgt.removeRegulationUnit("ruRepairPerLevelChange_2d4d");


    oprMgt.addRegulationUnitsToProcessRegulationPolicy("HappyTours","HappyToursP1","ruRepairPerLevelChange_2d");

    oprMgt.addRegulationUnitsToProcessRegulationPolicy("EuroCars","EuroCarsP1","ruRepairPerLevelChange_4d");
    long stop1 = System.nanoTime();
    System.out.println("Add : " + (stop1 - start1)/1000000);
end
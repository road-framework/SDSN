global au.edu.swin.ict.road.common.IOrganiserRole orgMgt;
global au.edu.swin.ict.road.common.IOperationalManagerRole oprMgt;
global au.edu.swin.ict.road.common.DisabledRuleSet disabledSet;
import au.edu.swin.ict.road.common.ManagementPolicyState;
import au.edu.swin.ict.road.common.Classifier
import au.edu.swin.ict.road.common.StatWriter;

rule "bikerental_org_stage1"
  when
  $mpsOrg : ManagementPolicyState(id =="bikerental_org", state=="incipient")
   then
   disabledSet.disable("bikerental_org_stage1");
   System.out.println("Organizational management policy bikerental_org_stage1 has been started.");

   orgMgt.addRole("BR","EuroBikeRental");
   orgMgt.addTask("BR","RentBike","CM-BR.sendBikeRequirements.Req,SC-BR.rentBike.Req",
   "SC-BR.sendRentInvoice.Req,CM-BR.sendBikeReservation.Req");
   orgMgt.setTaskInMessage("BR","RentBike","rentBike","String:content","String");
   orgMgt.setTaskOutMessage("BR","RentBike","rentBike","String:content","String");

   orgMgt.setServiceBinding("BR","http://localhost:8082/axis2/services/EuroBikeRentalService");

   orgMgt.addTask("SC","SendRentInvoice","SC-BR.sendRentInvoice.Req","SC-BR.sendRentInvoice.Req");
   orgMgt.setTaskInMessage("SC","SendRentInvoice","sendRentInvoice","String:content","String");
   orgMgt.setTaskOutMessage("SC","SendRentInvoice","sendRentInvoice","String:content","String");

   orgMgt.updateTask("SC","Analyze","add","outputs","SC-BR.rentBike.Req");
   orgMgt.updateTask("CM","RequestAssist","add","outputs","CM-BR.sendBikeRequirements.Req");

   orgMgt.addContract("SC-BR","SC","BR");
   orgMgt.addTerm("SC-BR","rentBike","AtoB");
   orgMgt.setTermOperation("SC-BR","rentBike","rentBike","String:content","String");
   orgMgt.addTerm("SC-BR","sendRentInvoice","BtoA");
   orgMgt.setTermOperation("SC-BR","sendRentInvoice","sendRentInvoice","String:content","String");

   orgMgt.addContract("CM-BR","CM","BR");
   orgMgt.addTerm("CM-BR","sendBikeRequirements","AtoB");
   orgMgt.setTermOperation("CM-BR","sendBikeRequirements","sendBikeRequirements","String:content","String");
   orgMgt.addTerm("CM-BR","sendBikeReservation","AtoB");
   orgMgt.setTermOperation("CM-BR","sendBikeReservation","sendBikeReservation","String:content","String");

   orgMgt.addBehaviorUnit("cuRentingBike");
   orgMgt.addTaskToBehaviorUnit("cuRentingBike","BR.RentBike","eRentBike * eSendBikeRequirements","eSendRentInvoice * eSendBikeReservation");
   orgMgt.addTaskToBehaviorUnit("cuRentingBike","SC.SendRentInvoice", "eSendRentInvoice","eInvoiceReceived");

   orgMgt.addBehaviorUnitToProcess("HappyTours","HappyToursP1","cuRentingBike");
   orgMgt.removeBehaviorUnitFromProcess("HappyTours","HappyToursP1","cuHiringTaxi");
   System.out.println("Organizational management policy bikerental_org_stage1 has been completed successfully.");
   $mpsOrg.setState("stage1done");
end

rule "bikerental_org_stage2"
  when
   ( $mpsOrg : ManagementPolicyState(id =="bikerental_org", state=="stage1done") ) and  ( $mpsOpr :
                                                                               ManagementPolicyState (id
                                                                               =="bikerental_opr", state=="quiescence"))
  then
   disabledSet.disable("bikerental_org_stage2");
   System.out.println("Organizational management policy bikerental_org_stage2 has been started.");
   orgMgt.updateRole("BR","state","active");
   orgMgt.updateContract("CM-BR","state","active");
   orgMgt.updateContract("SC-BR","state","active");
   orgMgt.updateBehaviorUnit("cuRentingBike","state","active");
   System.out.println("Organizational management policy bikerental_org_stage2 has been completed successfully.");
   $mpsOrg.setState("quiescence");
 end
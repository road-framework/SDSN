import au.edu.swin.ict.road.composite.rules.events.contract.MessageReceivedEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.ObligationComplianceEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.TermExecutedEvent;
import au.edu.swin.ict.road.composite.contract.Contract;
import au.edu.swin.ict.road.composite.message.MessageWrapper;
import au.edu.swin.ict.road.regulator.FactObject;
import au.edu.swin.ict.road.regulator.FactTupleSpace;
import au.edu.swin.ict.road.regulator.FactTupleSpaceRow;
import java.util.List;
import au.edu.swin.ict.road.composite.message.DroolsMsgUtil;

/** Global Variables **/
global Contract contract;
global FactTupleSpace fts;

/** Events **/
declare MessageReceivedEvent
    @role(event)
end

declare TermExecutedEvent
    @role(event)
    @expires(24h)
end

declare ObligationComplianceEvent
    @role(event)
    @expires(24h)
end

/** Permission Rules **/
rule "GetServiceUser"
	salience 50
    when
		$event : MessageReceivedEvent(operationName == "GetServiceUser")
    then
    	System.out.println("GetServiceUser called");
    	MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
			DroolsMsgUtil.updateServiceInvStat(mw, fts);
		}
		
end

/* rule "GetServiceUser2"
	salience 30
    when
		$event : MessageReceivedEvent(operationName == "GetServiceUser")
    then
    	System.out.println("GetServiceUser called");
		
end */

rule "GetServiceCapability"
	salience 50
    when
		$event : MessageReceivedEvent(operationName == "GetServiceCapability")
    then
    	System.out.println("GetServiceCapability called");
		MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
			DroolsMsgUtil.updateServiceInvStat(mw, fts);
		}
		
end

/* rule "GetServiceCapability2"
	salience 30
    when
		$event : MessageReceivedEvent(operationName == "GetServiceCapability")
    then
    	System.out.println("GetServiceCapability called");
		
end */

rule "GetServiceTechnicalInterface"
	salience 50
    when
		$event : MessageReceivedEvent(operationName == "GetServiceTechnicalInterface")
    then
    	System.out.println("GetServiceTechnicalInterface called");
    	MessageWrapper mw = $event.getMessageWrapper();
		boolean blocked = DroolsMsgUtil.isBlocked(mw, fts);
		$event.setBlocked(blocked);
		if(!blocked && !mw.isResponse())
		{
			DroolsMsgUtil.updateUserInvStat(mw, fts);
			DroolsMsgUtil.updateServiceInvStat(mw, fts);
		}
		
end

/* rule "GetServiceTechnicalInterface2"
	salience 30
    when
		$event : MessageReceivedEvent(operationName == "GetServiceTechnicalInterface")
    then
    	System.out.println("GetServiceTechnicalInterface called");
		
end */

orgMgt.updateVSN("EuroCars","state", "passive");
orgMgt.updateVSN("AnyTrucks","state", "passive");
orgMgt.addBehaviorUnitToProcess("EuroCars","EuroCarsP1","bTowingByMarkTow");
orgMgt.addBehaviorUnitToProcess("AnyTrucks","AnyTrucksP1","bTowingByMarkTow");
orgMgt.addBehaviorUnitToProcess("AnyTrucks","AnyTrucksP2","bTowingByMarkTow");
orgMgt.addBehaviorUnitToProcess("HappyTours","HappyToursP1","bTowingBySwiftTow");
oprMgt.addRegulationUnitsToProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingBySwiftTow,ruSwiftTowAndMacRepair,
ruActivateV2");
orgMgt.updateVSN("EuroCars","state", "active");
orgMgt.updateVSN("AnyTrucks","state", "active");
oprMgt.addRoutingRule("SC","SC_Routing_Diff_cs4_fun.drl");
oprMgt.updateRoutingRule("SC","analyzeResponseV10","state","active");
oprMgt.addRoutingRulesToRegulationUnit("ruTowingByMarkTow","analyzeResponseV10:SC");
oprMgt.addRegulationUnitsToProcessRegulationPolicy("EuroCars","EuroCarsP1","ruTowingByMarkTow,ruMarkTowAndMacRepair,ruActivateV1");
oprMgt.addRegulationUnitsToProcessRegulationPolicy("AnyTrucks","AnyTrucksP1","ruTowingByMarkTow,ruMarkTowAndMacRepair,ruActivateV1");
oprMgt.updateRegulationUnitsOfProcessRegulationPolicy("EuroCars","EuroCarsP1","ruTowingByMarkTow,ruMarkTowAndMacRepair,
ruActivateV1","state","active");
oprMgt.updateRegulationUnitsOfProcessRegulationPolicy("AnyTrucks","AnyTrucksP1","ruTowingByMarkTow,ruMarkTowAndMacRepair,
ruActivateV1","state","active");
oprMgt.updateRegulationUnitsOfProcessRegulationPolicy("HappyTours","HappyToursP1","ruTowingBySwiftTow,ruSwiftTowAndMacRepair,
ruActivateV2","state","active");
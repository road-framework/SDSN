import au.edu.swin.ict.road.composite.rules.events.contract.MessageReceivedEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.ObligationComplianceEvent;
import au.edu.swin.ict.road.composite.rules.events.contract.TermExecutedEvent;
import au.edu.swin.ict.road.composite.contract.Contract;
import au.edu.swin.ict.road.regulator.FactTupleSpace;

/** Global Variables **/
global Contract contract;
global FactTupleSpace fts;

/** Events **/
declare MessageReceivedEvent
    @role(event)
end

declare TermExecutedEvent
    @role(event)
    @expires(24h)
end

declare ObligationComplianceEvent
    @role(event)
    @expires(24h)
end

/** Permission Rules **/
rule "payPartsReq"
    when
		$msg : MessageReceivedEvent(operationName == "payParts", response==false)
    then
    	System.out.println("payParts interpretation :PayPartsReq");
    	//All the logic to evaluate the message is here.
		$msg.setBlocked(false);
		$msg.triggerEvent("PayPartsReq");
end

rule "payPartsRes"
    when
		$msg : MessageReceivedEvent(operationName == "payParts", response==true)
    then
    	System.out.println("payParts response interpretation :PSPaid");
    	//All the logic to evaluate the message is here.
		$msg.setBlocked(false);
		$msg.triggerEvent("PSPaid");
end